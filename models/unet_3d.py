import tensorflow as tf

def model(d, h, w, OUTPUT_CHANNELS):
    initializer = tf.random_normal_initializer(0., 0.02)
    
    inputs = tf.keras.layers.Input(shape=[d,h,w,OUTPUT_CHANNELS])
    skips = []
    
    x = inputs
    
    x = tf.keras.layers.Conv3D(filters=16,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=16,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    skips.append(x)
    x = tf.keras.layers.MaxPool3D(pool_size=(2, 2, 2), padding='same')(x)
    
    x = tf.keras.layers.Conv3D(filters=32,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=32,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=32,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    skips.append(x)
    x = tf.keras.layers.MaxPool3D(pool_size=(2, 2, 2), padding='same')(x)
    
    x = tf.keras.layers.Conv3D(filters=64,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=64,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=64,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    skips.append(x)
    x = tf.keras.layers.MaxPool3D(pool_size=(2, 2, 2), padding='same')(x)
    
    x = tf.keras.layers.Conv3D(filters=128,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=128,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=128,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.UpSampling3D(size=(2, 2, 2))(x)
    
    x = tf.keras.layers.Concatenate()([x, skips[2]])
    x = tf.keras.layers.Conv3D(filters=192,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=64,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=64,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.UpSampling3D(size=(2, 2, 2))(x)
    
    x = tf.keras.layers.Concatenate()([x, skips[1]])
    x = tf.keras.layers.Conv3D(filters=96,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=32,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=32,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.UpSampling3D(size=(2, 2, 2))(x)
    
    x = tf.keras.layers.Concatenate()([x, skips[0]])
    x = tf.keras.layers.Conv3D(filters=48,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=16,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    x = tf.keras.layers.Conv3D(filters=16,kernel_size=3,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.BatchNormalization()(x)
    x = tf.keras.layers.ReLU()(x)
    
    x = tf.keras.layers.Conv3D(filters=OUTPUT_CHANNELS,kernel_size=1,strides=1,padding='same',kernel_initializer=initializer)(x)
    x = tf.keras.layers.Activation('tanh')(x)

    return tf.keras.Model(inputs=inputs, outputs=x)